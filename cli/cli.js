#!/usr/bin/env node
"use strict";var Program=require("commander"),Colors=require("colors"),MOD_MIN=0,SKILL_MIN=0,ATTR_MIN=0,ROLLS_MIN=1,ROLLS_ATTR=3,ROLLS_TO_CRIT=2,D_20=20,ROLL_SLIP=20,ROLL_CRIT=1,QUAL_MULTIPLY=2,QUAL_DIVIDE=3,QUAL_MAX=6,QUAL_MIN=0,QUAL_SUCCESS=1,_=function(){function r(r,n){return Math.floor(Math.random()*(n-r+1))+r}function n(r,n){var t=parseInt(r);return isNaN(t)&&(t=n),t}function t(t,i){for(var o=[],e=0;e<n(i,ROLLS_MIN);e++)o.push(r(1,t));return o}function i(r){var t=[];return r.split("/").forEach(function(r){t.push(n(r,ATTR_MIN))}),t}function o(r,n){for(var t=r.toString().length,i=n.toString().length,o=0;o<i-t;o++)r=" "+r;return r.toString()}function e(r){console.log("\t"+(r||""))}function _(r,n,t){e((o(r,n)+". ").grey.dim+t)}function L(r,n,t,i){var _=o("‼",n);t=t||!1,i=i||!1,_=t?_.red:i?_.green:_.grey.dim,e(_+"  "+r.grey.dim)}function s(r,n,t,i,o){return r=r.toString(),n===t?r.green:n===i?r.red:o===!0?r.grey:r}function a(r,n,t){var i=[];return r.forEach(function(r){i.push(s(r.toString(),r,n,t,!0))}),i.join("/".grey)}function u(r,n){return r.toString().yellow+"w"+n.toString()+" "}function l(r){return"("+r.join("/").magenta+") "}function c(r){return"["+r.toString().magenta+"] "}function M(r){var n=r.toString()+" ";return r<MOD_MIN?n.red:r>MOD_MIN?("+"+n).green:("±"+n).grey.dim}function m(r){return("×"+r.toString()).grey.dim}function I(r,n,t,i){var e=o("Σ",t||0)+(n?": ":" ");return e.grey.dim+o(r,i||0).cyan}function S(r,n,t){var i=n||t?" ‼":"";i=n?i.green:t?i.red:i.grey.dim;var e="\tQS "+o(r,QUAL_MAX);return e=r<QUAL_SUCCESS?e.grey.dim:e,e+i+"\t"}function p(r){var n=(-(D_20*ROLLS_ATTR)).toString(),t="\t"+o(r,n);return r<SKILL_MIN?t.red:t.green}function f(r,n){var t=0;return r.forEach(function(r){t+=r===n?1:0}),t}function g(r,n,t,i){var o=Math.ceil(r/QUAL_DIVIDE),e=n?QUAL_SUCCESS:QUAL_MIN,_=n&&i?QUAL_MULTIPLY:t?0:1,L=r===SKILL_MIN?QUAL_SUCCESS:o;return Math.max(Math.min(L*_,QUAL_MAX),e)}return{printLine:e,printList:_,printMsg:L,splitAttr:i,rollDice:t,countRolls:f,calcQuality:g,strQuality:S,strPoints:p,strRepeat:m,strRolls:a,strDice:u,strRoll:s,strAttr:l,strVal:c,strSum:I,strMod:M,toInt:n,indent:o}}(),Commands=function(){function r(r,n,t){n=_.toInt(n,ROLLS_MIN);var i=_.toInt(t.plus,MOD_MIN),o=_.toInt(t.minus,MOD_MIN),e=i-o,L=r*n+e;_.printLine(),_.printLine(_.strDice(n,r)+_.strMod(i-o)),_.printLine(),_.rollDice(r,n).forEach(function(t,i){e+=t;var o=_.strRoll(_.indent(t,L),t,ROLL_CRIT,r);_.printList(i+1,n,o)}),_.printLine(),(n>ROLLS_MIN||i>MOD_MIN||o>MOD_MIN)&&(_.printLine(_.strSum(e,!0,n,L)),_.printLine())}function n(r,n,s){r=_.splitAttr(r),n=_.toInt(n,SKILL_MIN);var a=_.toInt(s.plus,MOD_MIN),u=_.toInt(s.minus,MOD_MIN),l=_.toInt(s.sammel,ROLLS_MIN),c=l>ROLLS_MIN,M=a-u,m=!1,I=!1,S=!1,p=0,f=0;if(r.length!==ROLLS_ATTR)_.printLine(),_.printLine(i.red),_.printLine(t.grey),_.printLine();else{_.printLine(),_.printLine(_.strDice(ROLLS_ATTR,D_20)+_.strAttr(r)+_.strMod(M)+_.strVal(n)+_.strRepeat(l)),_.printLine();for(var g=0;g<l;g++){for(var R=[],A=n+0,O=0;O<r.length;O++){R[O]=_.rollDice(D_20,ROLLS_MIN)[0];var N=Math.max(ATTR_MIN,r[O]+M-p),T=Math.max(ATTR_MIN,R[O]-N);A-=T}var d=_.countRolls(R,ROLL_SLIP)>=ROLLS_TO_CRIT,U=_.countRolls(R,ROLL_CRIT)>=ROLLS_TO_CRIT,h=_.calcQuality(A,U,d,c),v=Math.min(QUAL_MAX,h*QUAL_MULTIPLY),D=h<QUAL_SUCCESS;if(I=!!I||d,S=!!S||U,m=!!m||D,p=U?MOD_MIN:D?p+1:p,f=d?QUAL_MIN:U?f+v:f+h,_.printList(g+1,l,_.strRolls(R,ROLL_CRIT,ROLL_SLIP)+_.strPoints(A)+_.strQuality(h,U,d)+_.strSum(f,!1,0,QUAL_MAX*l)),d)break}_.printLine(),m&&!I&&_.printMsg(e,l),S&&_.printMsg(L,l,!1,!0),I&&_.printMsg(o,l,!0,!1),(m||I||S)&&_.printLine()}}var t="(z.B. 11/13/12)",i="Probe im falschen Format!",o="Patzer (automatisch misslungen)",e="Misslungen (bei Sammelprobe Malus +1)",L="Krit. Erfolg (bei Sammelprobe QS×2, Malus 0)";return{roll:r,skill:n}}();[100,20,12,10,8,6,4,3,2].forEach(function(r){Program.command("w"+r+" [n]").description("nW"+r+" würfeln").option("-p, --plus <x>","Summe +x").option("-m, --minus <x>","Summe -x").action(function(n,t){Commands.roll(r,n,t)})}),Program.command("probe <probe> <fw>").description("Fertigkeitsprobe würfeln").option("-s, --sammel <n>","Sammelprobe mit n Versuchen").option("-m, --minus <x>","Erleichterung +x").option("-p, --plus <x>","Erschwernis -x").action(function(r,n,t){Commands.skill(r,n,t)}),Program.version("0.0.1").parse(process.argv);